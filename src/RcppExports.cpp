// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// LCA_fast_poly_includeall
List LCA_fast_poly_includeall(arma::mat mY, arma::mat mDesign, arma::ivec ivFreq, int iK, arma::mat mU, arma::ivec ivItemcat, arma::uvec first_poly, arma::vec reord_user, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_LCA_fast_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP ivFreqSEXP, SEXP iKSEXP, SEXP mUSEXP, SEXP ivItemcatSEXP, SEXP first_polySEXP, SEXP reord_userSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivFreq(ivFreqSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type first_poly(first_polySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA_fast_poly_includeall(mY, mDesign, ivFreq, iK, mU, ivItemcat, first_poly, reord_user, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// LCAcov_poly_includeall
List LCAcov_poly_includeall(arma::mat mY, arma::mat mDesign, arma::mat mZ, int iK, arma::mat mPhi, arma::mat mBeta, arma::mat mStep1Var, arma::ivec ivItemcat, int fixed, int maxIter, double tol, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_LCAcov_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP mZSEXP, SEXP iKSEXP, SEXP mPhiSEXP, SEXP mBetaSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP fixedSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mBeta(mBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(LCAcov_poly_includeall(mY, mDesign, mZ, iK, mPhi, mBeta, mStep1Var, ivItemcat, fixed, maxIter, tol, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// LCAcov_poly
List LCAcov_poly(arma::mat mY, arma::mat mZ, int iK, arma::mat mPhi, arma::mat mBeta, arma::mat mStep1Var, arma::ivec ivItemcat, int fixed, int maxIter, double tol, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_LCAcov_poly(SEXP mYSEXP, SEXP mZSEXP, SEXP iKSEXP, SEXP mPhiSEXP, SEXP mBetaSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP fixedSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mBeta(mBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(LCAcov_poly(mY, mZ, iK, mPhi, mBeta, mStep1Var, ivItemcat, fixed, maxIter, tol, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// LCA_fast_poly
List LCA_fast_poly(arma::mat mY, arma::ivec ivFreq, int iK, arma::mat mU, arma::ivec ivItemcat, arma::uvec first_poly, arma::vec reord_user, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_LCA_fast_poly(SEXP mYSEXP, SEXP ivFreqSEXP, SEXP iKSEXP, SEXP mUSEXP, SEXP ivItemcatSEXP, SEXP first_polySEXP, SEXP reord_userSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivFreq(ivFreqSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type first_poly(first_polySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA_fast_poly(mY, ivFreq, iK, mU, ivItemcat, first_poly, reord_user, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// LCA_LLK
double LCA_LLK(arma::vec parvec, arma::mat mY, int iK);
RcppExport SEXP _multilevLCA_LCA_LLK(SEXP parvecSEXP, SEXP mYSEXP, SEXP iKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA_LLK(parvec, mY, iK));
    return rcpp_result_gen;
END_RCPP
}
// LCA_LLK_j
arma::vec LCA_LLK_j(arma::vec parvec, arma::mat mY, int iK);
RcppExport SEXP _multilevLCA_LCA_LLK_j(SEXP parvecSEXP, SEXP mYSEXP, SEXP iKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA_LLK_j(parvec, mY, iK));
    return rcpp_result_gen;
END_RCPP
}
// LCAcov
List LCAcov(arma::mat mY, arma::mat mZ, int iK, arma::mat mPhi, arma::mat mBeta, arma::mat mStep1Var, int fixed, int maxIter, double tol, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_LCAcov(SEXP mYSEXP, SEXP mZSEXP, SEXP iKSEXP, SEXP mPhiSEXP, SEXP mBetaSEXP, SEXP mStep1VarSEXP, SEXP fixedSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mBeta(mBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< int >::type fixed(fixedSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(LCAcov(mY, mZ, iK, mPhi, mBeta, mStep1Var, fixed, maxIter, tol, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// LCA
List LCA(arma::mat mY, int iK, arma::mat mU, arma::vec reord_user, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_LCA(SEXP mYSEXP, SEXP iKSEXP, SEXP mUSEXP, SEXP reord_userSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA(mY, iK, mU, reord_user, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// LCA_fast
List LCA_fast(arma::mat mY, arma::ivec ivFreq, int iK, arma::mat mU, arma::vec reord_user, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_LCA_fast(SEXP mYSEXP, SEXP ivFreqSEXP, SEXP iKSEXP, SEXP mUSEXP, SEXP reord_userSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivFreq(ivFreqSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(LCA_fast(mY, ivFreq, iK, mU, reord_user, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// MixtDensityScale
double MixtDensityScale(arma::vec vOmega, arma::vec vD_log, int iJ);
RcppExport SEXP _multilevLCA_MixtDensityScale(SEXP vOmegaSEXP, SEXP vD_logSEXP, SEXP iJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vD_log(vD_logSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    rcpp_result_gen = Rcpp::wrap(MixtDensityScale(vOmega, vD_log, iJ));
    return rcpp_result_gen;
END_RCPP
}
// rando_index
int rando_index(arma::vec p);
RcppExport SEXP _multilevLCA_rando_index(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rando_index(p));
    return rcpp_result_gen;
END_RCPP
}
// zero_bound
arma::vec zero_bound(arma::vec parvec, double zbound);
RcppExport SEXP _multilevLCA_zero_bound(SEXP parvecSEXP, SEXP zboundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< double >::type zbound(zboundSEXP);
    rcpp_result_gen = Rcpp::wrap(zero_bound(parvec, zbound));
    return rcpp_result_gen;
END_RCPP
}
// logisticReg
List logisticReg(arma::vec vY, arma::mat vZ, arma::vec SmoothProb, arma::vec vBeta, int maxIter, double tol);
RcppExport SEXP _multilevLCA_logisticReg(SEXP vYSEXP, SEXP vZSEXP, SEXP SmoothProbSEXP, SEXP vBetaSEXP, SEXP maxIterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type vZ(vZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type SmoothProb(SmoothProbSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(logisticReg(vY, vZ, SmoothProb, vBeta, maxIter, tol));
    return rcpp_result_gen;
END_RCPP
}
// NR_step_cov
List NR_step_cov(arma::mat mX, arma::mat mbeta, arma::mat mU);
RcppExport SEXP _multilevLCA_NR_step_cov(SEXP mXSEXP, SEXP mbetaSEXP, SEXP mUSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbeta(mbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    rcpp_result_gen = Rcpp::wrap(NR_step_cov(mX, mbeta, mU));
    return rcpp_result_gen;
END_RCPP
}
// NR_step_covIT
List NR_step_covIT(arma::mat mX, arma::mat mbeta, arma::mat mU, double tol, int maxIt);
RcppExport SEXP _multilevLCA_NR_step_covIT(SEXP mXSEXP, SEXP mbetaSEXP, SEXP mUSEXP, SEXP tolSEXP, SEXP maxItSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbeta(mbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIt(maxItSEXP);
    rcpp_result_gen = Rcpp::wrap(NR_step_covIT(mX, mbeta, mU, tol, maxIt));
    return rcpp_result_gen;
END_RCPP
}
// NR_step_covIT_LS
List NR_step_covIT_LS(arma::mat mX, arma::mat mbeta, arma::mat mU, double dC, double tol, int maxIt);
RcppExport SEXP _multilevLCA_NR_step_covIT_LS(SEXP mXSEXP, SEXP mbetaSEXP, SEXP mUSEXP, SEXP dCSEXP, SEXP tolSEXP, SEXP maxItSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbeta(mbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< double >::type dC(dCSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIt(maxItSEXP);
    rcpp_result_gen = Rcpp::wrap(NR_step_covIT_LS(mX, mbeta, mU, dC, tol, maxIt));
    return rcpp_result_gen;
END_RCPP
}
// NR_step_covIT_wei
List NR_step_covIT_wei(arma::mat mX, arma::mat mbeta, arma::mat mU, arma::vec vWei, double tol, int maxIt);
RcppExport SEXP _multilevLCA_NR_step_covIT_wei(SEXP mXSEXP, SEXP mbetaSEXP, SEXP mUSEXP, SEXP vWeiSEXP, SEXP tolSEXP, SEXP maxItSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbeta(mbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vWei(vWeiSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIt(maxItSEXP);
    rcpp_result_gen = Rcpp::wrap(NR_step_covIT_wei(mX, mbeta, mU, vWei, tol, maxIt));
    return rcpp_result_gen;
END_RCPP
}
// NR_step_covIT_wei_LS
List NR_step_covIT_wei_LS(arma::mat mX, arma::mat mbeta, arma::mat mU, double dC, arma::vec vWei, double tol, int maxIt);
RcppExport SEXP _multilevLCA_NR_step_covIT_wei_LS(SEXP mXSEXP, SEXP mbetaSEXP, SEXP mUSEXP, SEXP dCSEXP, SEXP vWeiSEXP, SEXP tolSEXP, SEXP maxItSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbeta(mbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mU(mUSEXP);
    Rcpp::traits::input_parameter< double >::type dC(dCSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vWei(vWeiSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxIt(maxItSEXP);
    rcpp_result_gen = Rcpp::wrap(NR_step_covIT_wei_LS(mX, mbeta, mU, dC, vWei, tol, maxIt));
    return rcpp_result_gen;
END_RCPP
}
// vecTomatClass
arma::mat vecTomatClass(arma::vec vClass);
RcppExport SEXP _multilevLCA_vecTomatClass(SEXP vClassSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vClass(vClassSEXP);
    rcpp_result_gen = Rcpp::wrap(vecTomatClass(vClass));
    return rcpp_result_gen;
END_RCPP
}
// AvgMarginalEff
List AvgMarginalEff(arma::mat beta, arma::mat P_ij, arma::vec weights);
RcppExport SEXP _multilevLCA_AvgMarginalEff(SEXP betaSEXP, SEXP P_ijSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P_ij(P_ijSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(AvgMarginalEff(beta, P_ij, weights));
    return rcpp_result_gen;
END_RCPP
}
// grad_MLTLCA
arma::vec grad_MLTLCA(arma::vec parvec, arma::vec vY, arma::vec vD, arma::vec vPW_N, arma::mat mPX, arma::mat mPMX);
RcppExport SEXP _multilevLCA_grad_MLTLCA(SEXP parvecSEXP, SEXP vYSEXP, SEXP vDSEXP, SEXP vPW_NSEXP, SEXP mPXSEXP, SEXP mPMXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vD(vDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPW_N(vPW_NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPX(mPXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPMX(mPMXSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_MLTLCA(parvec, vY, vD, vPW_N, mPX, mPMX));
    return rcpp_result_gen;
END_RCPP
}
// grad_MLTLCA_cov
arma::vec grad_MLTLCA_cov(arma::vec parvec, arma::mat mPhi, arma::vec vY, arma::vec vZ, arma::vec vD, arma::vec vPW_N, arma::mat mPX, arma::mat mPMX, arma::vec vPMsumX, arma::ivec ivItemcat, int nstep);
RcppExport SEXP _multilevLCA_grad_MLTLCA_cov(SEXP parvecSEXP, SEXP mPhiSEXP, SEXP vYSEXP, SEXP vZSEXP, SEXP vDSEXP, SEXP vPW_NSEXP, SEXP mPXSEXP, SEXP mPMXSEXP, SEXP vPMsumXSEXP, SEXP ivItemcatSEXP, SEXP nstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vZ(vZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vD(vDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPW_N(vPW_NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPX(mPXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPMX(mPMXSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPMsumX(vPMsumXSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_MLTLCA_cov(parvec, mPhi, vY, vZ, vD, vPW_N, mPX, mPMX, vPMsumX, ivItemcat, nstep));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covWfixedlowhigh_poly_includeall
List MLTLCA_covWfixedlowhigh_poly_includeall(arma::mat mY, arma::mat mDesign, arma::mat mZ, arma::mat mZh, arma::vec vNj, arma::mat mDelta_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covWfixedlowhigh_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP mZSEXP, SEXP mZhSEXP, SEXP vNjSEXP, SEXP mDelta_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZh(mZhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDelta_start(mDelta_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covWfixedlowhigh_poly_includeall(mY, mDesign, mZ, mZh, vNj, mDelta_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covWfixedlowhigh_poly
List MLTLCA_covWfixedlowhigh_poly(arma::mat mY, arma::mat mZ, arma::mat mZh, arma::vec vNj, arma::mat mDelta_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covWfixedlowhigh_poly(SEXP mYSEXP, SEXP mZSEXP, SEXP mZhSEXP, SEXP vNjSEXP, SEXP mDelta_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZh(mZhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDelta_start(mDelta_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covWfixedlowhigh_poly(mY, mZ, mZh, vNj, mDelta_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covWfixed_poly_includeall
List MLTLCA_covWfixed_poly_includeall(arma::mat mY, arma::mat mDesign, arma::mat mZ, arma::vec vNj, arma::vec vOmega_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covWfixed_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP vOmega_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_start(vOmega_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covWfixed_poly_includeall(mY, mDesign, mZ, vNj, vOmega_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covWfixed_poly
List MLTLCA_covWfixed_poly(arma::mat mY, arma::mat mZ, arma::vec vNj, arma::vec vOmega_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covWfixed_poly(SEXP mYSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP vOmega_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_start(vOmega_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covWfixed_poly(mY, mZ, vNj, vOmega_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covlowhigh_poly_includeall
List MLTLCA_covlowhigh_poly_includeall(arma::mat mY, arma::mat mDesign, arma::mat mZ, arma::mat mZh, arma::vec vNj, arma::mat mDelta_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covlowhigh_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP mZSEXP, SEXP mZhSEXP, SEXP vNjSEXP, SEXP mDelta_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZh(mZhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDelta_start(mDelta_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covlowhigh_poly_includeall(mY, mDesign, mZ, mZh, vNj, mDelta_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_cov_poly_includeall
List MLTLCA_cov_poly_includeall(arma::mat mY, arma::mat mDesign, arma::mat mZ, arma::vec vNj, arma::vec vOmega_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_cov_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP vOmega_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_start(vOmega_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_cov_poly_includeall(mY, mDesign, mZ, vNj, vOmega_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_poly_includeall
List MLTLCA_poly_includeall(arma::mat mY, arma::mat mDesign, arma::vec vNj, arma::vec vOmega, arma::mat mPi, arma::mat mPhi, arma::ivec ivItemcat, arma::uvec first_poly, arma::vec reord_user, arma::vec reord_user_high, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_MLTLCA_poly_includeall(SEXP mYSEXP, SEXP mDesignSEXP, SEXP vNjSEXP, SEXP vOmegaSEXP, SEXP mPiSEXP, SEXP mPhiSEXP, SEXP ivItemcatSEXP, SEXP first_polySEXP, SEXP reord_userSEXP, SEXP reord_user_highSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDesign(mDesignSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPi(mPiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type first_poly(first_polySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user_high(reord_user_highSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_poly_includeall(mY, mDesign, vNj, vOmega, mPi, mPhi, ivItemcat, first_poly, reord_user, reord_user_high, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covlowhigh_poly
List MLTLCA_covlowhigh_poly(arma::mat mY, arma::mat mZ, arma::mat mZh, arma::vec vNj, arma::mat mDelta_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covlowhigh_poly(SEXP mYSEXP, SEXP mZSEXP, SEXP mZhSEXP, SEXP vNjSEXP, SEXP mDelta_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZh(mZhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDelta_start(mDelta_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covlowhigh_poly(mY, mZ, mZh, vNj, mDelta_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_cov_poly
List MLTLCA_cov_poly(arma::mat mY, arma::mat mZ, arma::vec vNj, arma::vec vOmega_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, arma::ivec ivItemcat, int maxIter, double tol, int fixedpars, int nsteps, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_cov_poly(SEXP mYSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP vOmega_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP ivItemcatSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP nstepsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_start(vOmega_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< int >::type nsteps(nstepsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_cov_poly(mY, mZ, vNj, vOmega_start, cGamma_start, mPhi_start, mStep1Var, ivItemcat, maxIter, tol, fixedpars, nsteps, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_poly
List MLTLCA_poly(arma::mat mY, arma::vec vNj, arma::vec vOmega, arma::mat mPi, arma::mat mPhi, arma::ivec ivItemcat, arma::uvec first_poly, arma::vec reord_user, arma::vec reord_user_high, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_MLTLCA_poly(SEXP mYSEXP, SEXP vNjSEXP, SEXP vOmegaSEXP, SEXP mPiSEXP, SEXP mPhiSEXP, SEXP ivItemcatSEXP, SEXP first_polySEXP, SEXP reord_userSEXP, SEXP reord_user_highSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPi(mPiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ivItemcat(ivItemcatSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type first_poly(first_polySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user_high(reord_user_highSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_poly(mY, vNj, vOmega, mPi, mPhi, ivItemcat, first_poly, reord_user, reord_user_high, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_covlowhigh
List MLTLCA_covlowhigh(arma::mat mY, arma::mat mZ, arma::mat mZh, arma::vec vNj, arma::mat mDelta_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, int maxIter, double tol, int fixedpars, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_covlowhigh(SEXP mYSEXP, SEXP mZSEXP, SEXP mZhSEXP, SEXP vNjSEXP, SEXP mDelta_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZh(mZhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mDelta_start(mDelta_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_covlowhigh(mY, mZ, mZh, vNj, mDelta_start, cGamma_start, mPhi_start, mStep1Var, maxIter, tol, fixedpars, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_cov
List MLTLCA_cov(arma::mat mY, arma::mat mZ, arma::vec vNj, arma::vec vOmega_start, arma::cube cGamma_start, arma::mat mPhi_start, arma::mat mStep1Var, int maxIter, double tol, int fixedpars, double NRtol, int NRmaxit);
RcppExport SEXP _multilevLCA_MLTLCA_cov(SEXP mYSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP vOmega_startSEXP, SEXP cGamma_startSEXP, SEXP mPhi_startSEXP, SEXP mStep1VarSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP fixedparsSEXP, SEXP NRtolSEXP, SEXP NRmaxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_start(vOmega_startSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cGamma_start(cGamma_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi_start(mPhi_startSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mStep1Var(mStep1VarSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type fixedpars(fixedparsSEXP);
    Rcpp::traits::input_parameter< double >::type NRtol(NRtolSEXP);
    Rcpp::traits::input_parameter< int >::type NRmaxit(NRmaxitSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_cov(mY, mZ, vNj, vOmega_start, cGamma_start, mPhi_start, mStep1Var, maxIter, tol, fixedpars, NRtol, NRmaxit));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA
List MLTLCA(arma::mat mY, arma::vec vNj, arma::vec vOmega, arma::mat mPi, arma::mat mPhi, arma::vec reord_user, arma::vec reord_user_high, int maxIter, double tol, int reord);
RcppExport SEXP _multilevLCA_MLTLCA(SEXP mYSEXP, SEXP vNjSEXP, SEXP vOmegaSEXP, SEXP mPiSEXP, SEXP mPhiSEXP, SEXP reord_userSEXP, SEXP reord_user_highSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP reordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPi(mPiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user(reord_userSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type reord_user_high(reord_user_highSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type reord(reordSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA(mY, vNj, vOmega, mPi, mPhi, reord_user, reord_user_high, maxIter, tol, reord));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_cov_LLK
double MLTLCA_cov_LLK(arma::vec parvec, arma::mat mY, arma::mat mZ, arma::vec vNj, int iM, int iT);
RcppExport SEXP _multilevLCA_MLTLCA_cov_LLK(SEXP parvecSEXP, SEXP mYSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP iMSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_cov_LLK(parvec, mY, mZ, vNj, iM, iT));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_cov_LLK_j
arma::vec MLTLCA_cov_LLK_j(arma::vec parvec, arma::mat mY, arma::mat mZ, arma::vec vNj, int iM, int iT);
RcppExport SEXP _multilevLCA_MLTLCA_cov_LLK_j(SEXP parvecSEXP, SEXP mYSEXP, SEXP mZSEXP, SEXP vNjSEXP, SEXP iMSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_cov_LLK_j(parvec, mY, mZ, vNj, iM, iT));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_LLK
double MLTLCA_LLK(arma::vec parvec, arma::mat mY, arma::vec vNj, int iM, int iT);
RcppExport SEXP _multilevLCA_MLTLCA_LLK(SEXP parvecSEXP, SEXP mYSEXP, SEXP vNjSEXP, SEXP iMSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_LLK(parvec, mY, vNj, iM, iT));
    return rcpp_result_gen;
END_RCPP
}
// MLTLCA_LLK_j
arma::vec MLTLCA_LLK_j(arma::vec parvec, arma::mat mY, arma::vec vNj, int iM, int iT);
RcppExport SEXP _multilevLCA_MLTLCA_LLK_j(SEXP parvecSEXP, SEXP mYSEXP, SEXP vNjSEXP, SEXP iMSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type parvec(parvecSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mY(mYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNj(vNjSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(MLTLCA_LLK_j(parvec, mY, vNj, iM, iT));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_multilevLCA_LCA_fast_poly_includeall", (DL_FUNC) &_multilevLCA_LCA_fast_poly_includeall, 11},
    {"_multilevLCA_LCAcov_poly_includeall", (DL_FUNC) &_multilevLCA_LCAcov_poly_includeall, 13},
    {"_multilevLCA_LCAcov_poly", (DL_FUNC) &_multilevLCA_LCAcov_poly, 12},
    {"_multilevLCA_LCA_fast_poly", (DL_FUNC) &_multilevLCA_LCA_fast_poly, 10},
    {"_multilevLCA_LCA_LLK", (DL_FUNC) &_multilevLCA_LCA_LLK, 3},
    {"_multilevLCA_LCA_LLK_j", (DL_FUNC) &_multilevLCA_LCA_LLK_j, 3},
    {"_multilevLCA_LCAcov", (DL_FUNC) &_multilevLCA_LCAcov, 11},
    {"_multilevLCA_LCA", (DL_FUNC) &_multilevLCA_LCA, 7},
    {"_multilevLCA_LCA_fast", (DL_FUNC) &_multilevLCA_LCA_fast, 8},
    {"_multilevLCA_MixtDensityScale", (DL_FUNC) &_multilevLCA_MixtDensityScale, 3},
    {"_multilevLCA_rando_index", (DL_FUNC) &_multilevLCA_rando_index, 1},
    {"_multilevLCA_zero_bound", (DL_FUNC) &_multilevLCA_zero_bound, 2},
    {"_multilevLCA_logisticReg", (DL_FUNC) &_multilevLCA_logisticReg, 6},
    {"_multilevLCA_NR_step_cov", (DL_FUNC) &_multilevLCA_NR_step_cov, 3},
    {"_multilevLCA_NR_step_covIT", (DL_FUNC) &_multilevLCA_NR_step_covIT, 5},
    {"_multilevLCA_NR_step_covIT_LS", (DL_FUNC) &_multilevLCA_NR_step_covIT_LS, 6},
    {"_multilevLCA_NR_step_covIT_wei", (DL_FUNC) &_multilevLCA_NR_step_covIT_wei, 6},
    {"_multilevLCA_NR_step_covIT_wei_LS", (DL_FUNC) &_multilevLCA_NR_step_covIT_wei_LS, 7},
    {"_multilevLCA_vecTomatClass", (DL_FUNC) &_multilevLCA_vecTomatClass, 1},
    {"_multilevLCA_AvgMarginalEff", (DL_FUNC) &_multilevLCA_AvgMarginalEff, 3},
    {"_multilevLCA_grad_MLTLCA", (DL_FUNC) &_multilevLCA_grad_MLTLCA, 6},
    {"_multilevLCA_grad_MLTLCA_cov", (DL_FUNC) &_multilevLCA_grad_MLTLCA_cov, 11},
    {"_multilevLCA_MLTLCA_covWfixedlowhigh_poly_includeall", (DL_FUNC) &_multilevLCA_MLTLCA_covWfixedlowhigh_poly_includeall, 16},
    {"_multilevLCA_MLTLCA_covWfixedlowhigh_poly", (DL_FUNC) &_multilevLCA_MLTLCA_covWfixedlowhigh_poly, 15},
    {"_multilevLCA_MLTLCA_covWfixed_poly_includeall", (DL_FUNC) &_multilevLCA_MLTLCA_covWfixed_poly_includeall, 15},
    {"_multilevLCA_MLTLCA_covWfixed_poly", (DL_FUNC) &_multilevLCA_MLTLCA_covWfixed_poly, 14},
    {"_multilevLCA_MLTLCA_covlowhigh_poly_includeall", (DL_FUNC) &_multilevLCA_MLTLCA_covlowhigh_poly_includeall, 16},
    {"_multilevLCA_MLTLCA_cov_poly_includeall", (DL_FUNC) &_multilevLCA_MLTLCA_cov_poly_includeall, 15},
    {"_multilevLCA_MLTLCA_poly_includeall", (DL_FUNC) &_multilevLCA_MLTLCA_poly_includeall, 13},
    {"_multilevLCA_MLTLCA_covlowhigh_poly", (DL_FUNC) &_multilevLCA_MLTLCA_covlowhigh_poly, 15},
    {"_multilevLCA_MLTLCA_cov_poly", (DL_FUNC) &_multilevLCA_MLTLCA_cov_poly, 14},
    {"_multilevLCA_MLTLCA_poly", (DL_FUNC) &_multilevLCA_MLTLCA_poly, 12},
    {"_multilevLCA_MLTLCA_covlowhigh", (DL_FUNC) &_multilevLCA_MLTLCA_covlowhigh, 13},
    {"_multilevLCA_MLTLCA_cov", (DL_FUNC) &_multilevLCA_MLTLCA_cov, 12},
    {"_multilevLCA_MLTLCA", (DL_FUNC) &_multilevLCA_MLTLCA, 10},
    {"_multilevLCA_MLTLCA_cov_LLK", (DL_FUNC) &_multilevLCA_MLTLCA_cov_LLK, 6},
    {"_multilevLCA_MLTLCA_cov_LLK_j", (DL_FUNC) &_multilevLCA_MLTLCA_cov_LLK_j, 6},
    {"_multilevLCA_MLTLCA_LLK", (DL_FUNC) &_multilevLCA_MLTLCA_LLK, 5},
    {"_multilevLCA_MLTLCA_LLK_j", (DL_FUNC) &_multilevLCA_MLTLCA_LLK_j, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_multilevLCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
